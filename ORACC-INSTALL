Operating System Setup
======================

For CentOS 6:
-------------

On CentOS 6 if the machine is only for Oracc you can just do a minimal
install then:

	./pkg-centos6-minimal.sh

Ensure that the user who is installing has sudo permission.


For Mac OS X:
-------------

First install XCode, then install Macports for your version from macports.org.

Now run the pkg installer (note: this is untested with OS X 10.7):

	./pkg-mac-osx.sh

Ensure that the user who is installing has maintainer privileges.

Obtaining Oracc
===============

Change directory to the location where you want the Oracc repository and do:

	git clone https://github.com/oracc/oracc.git

This creates a repo 'oracc'.  Change directory to the repo with `cd oracc'.


Oracc user creation and initial setup
=====================================

Linux
-----

Run ./oracc-user.sh and follow the prompts.


Mac OS X
--------

Create a user 'oracc' from System->Preferences->Users.  Do not give this user Maintainer
privileges.


Edit oraccenv.sh following the documentation of the Environment at the end of this file.

Set up the environment using oraccenv.sh:

  . oraccenv.sh


Configure and Install Oracc
===========================

  sudo ./preconfig.sh
  ./lnx-config.sh or ./mac-config.sh
  sudo ./makeinstall.sh

(if you want to build with debugging info, run ./lnx-config.sh CFLAGS=-g)


Configure Apache for Oracc
==========================

Review the file oracc-vhost.conf which was created during the configuration process.  When
it meets your server's requirements type:

   sudo ./install-oracc-vhost-conf.sh

Linux:
------

Firewall
........

Check that your iptables accept tcp port 80 using iptables -L -n.  If you *don't* see
something like:

	ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:80 

then you need to add access to port 80.  On CentOS/RedHat this is best done with

	sudo system-config-firewall

It can also be done manually with:

	/sbin/iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j ACCEPT

but this is not recommended as it can be tricky to get the rules in the correct order.
	
Autostart
.........

The Oracc installation process should automatically add `apachectl
start' to /etc/rc.d/rc.local -- if you are not on a RedHat/CentOS
system you may need to do something other than this.


Mac OS X:
---------

This was easy up until Mountain Lion.  See this page for notes and a
link to a page that makes it easy again:

        http://osxdaily.com/2012/09/02/start-apache-web-server-mac-os-x/


Configure Dropbox
=================

Either open a browser and login to the Oracc account on dropbox.com or
follow the instructions below for CLI install.

Dropbox CLI install for CentOS
------------------------------

This is how to register a new server with the Oracc dropbox account if
you need to do it remotely or if the server is headless.

ON THE NEW SERVER
.................

* Log in to oracc user account
* Install dropbox for Linux from dropbox.com
* run dropbox -i (or whatev that was) to install dropbox itself
* run dropboxd to get the cli link to register the machine
* copy the link it gives you to the clipboard
* !!! LEAVE dropboxd RUNNING while you do the next steps !!!

ON YOUR INSTALL CLIENT
......................

* open terminal and ssh -D 9999 oracc@NEW_SERVER_IP; leave this connection open
* close and reopen Firefox (may not be necessary)
* switch SOCKS (v4 only?) proxy on in Firefox:
  - Preferences->Advanced->Network->Connection Settings->Socks
  - host=localhost port=9999
  - check v4 radiobutton
* paste the link from the server instance of dropboxd into the Firefox URL bar
* login as requested
* wait ... you should see a message about successful linkage


Oracc Environment Variables
===========================

Oracc has several environment variables which must be set at install time:

* ORACC

  The location of installed Oracc software, default = /home/oracc

* ORACC_MODE

  The user-mode of the installation, either 'single', i.e., one user, or
  'multi', i.e., multiple users.

  In 'single' mode, there is no user 'oracc' (unless that is the single
  user).  In 'multi' mode there must be a system user 'oracc'.

* ORACC_HOME

  The location of Oracc projects.  In a 'multi' installation this is 
  /home on Unix or /Users on Mac.  In a 'single' installation this may
  be either /usr/local/oracc or any other directory that the Oracc
  installation has access to.  If the 'single' installation is on a
  personal computer, ~/oracc-projects is the default location

* ORACC_USER

  This is 'yes' if there is a system user named oracc, no otherwise. An
  oracc user is required for multi mode but is optional otherwise.

* ORACC_HOST

  This should be the full domain name of the Oracc server on which the
  instance is running.
