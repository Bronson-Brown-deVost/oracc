<?xml version='1.0' encoding='utf-8'?>
<d:doc  xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:d="http://oracc.org/ns/xdf/1.0"
	xmlns:dc="http://purl.org/dc/elements/1.1"
	xmlns:dcterms="http://purl.org/dc/terms/"
	xmlns:h="http://www.w3.org/1999/xhtml" 
   	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	>

<d:meta>
  <dc:title>Oracc eXist Projects</dc:title>
  <dcterms:alternative></dcterms:alternative>
  <dcterms:identifier 
      xsi:type="dcterms:URI"></dcterms:identifier>
  <dc:creator>Steve Tinney</dc:creator>
  <dc:date>06/16/06</dc:date>
  <dc:publisher>Oracc</dc:publisher>
  <dc:description>This document gives a general introduction to the
  Oracc installation of the eXist database and pointers to further
  useful documentation.</dc:description>
</d:meta>

<h1>eXist Projects</h1>

<h2>Enable eXist</h2>

<p>To enable inclusion of project data in the eXist database you must
set one or two configuration options:</p>

<pre>
  &lt;option name="build-tei" value="yes"/>   (if you want to use TEI)
  &lt;option name="build-eXist" value="yes"/> (obligatory)
</pre>

<h2>Rebuild eXist</h2>

<p>When a project is rebuilt, the TEI and eXist installations are
automatically rebuilt if their use is specified in the project
configuration.</p>

<p>If you want to update the database without rebuilding, you can
say:</p>

<pre>
oracc eXist
</pre>

<h2>Data Marshalling</h2>

<p>Project data is marshalled in a directory named <code>02xml</code>.
This marshalling is automatically done on rebuild, and uses a
combination of copying and linking files to create a document tree in
the filesystem which is then loaded into the Oracc webapp in the
database as a collection with the same name as the project.</p>

<p>The layout of the document tree is quite simple:</p>

<pre>
PROJECT
    /lib -- XQueries, CSS and other infrastructure
    /oml -- the Oracc Markup Language version of project data
            generated by Oracc from the texts and glossaries
    /tei -- the TEI version of project data
    /usr -- arbitrary non-TEI XML data supplied by the project
</pre>

<h3>Adding Code and Data</h3>

<p>You can put application code, XQueries, XSL scripts, CSS files,
configuration data and any additional XML data in the DB by adding
files to the project's <code>00xml/lib</code> directory.  You can
add data to <code>00xml/usr</code>.  The entire
file tree under each directory is linked in to the
<code>02xdb</code> directory of the marshalled data for
addition to the DB, with <code>00xml/lib</code> being added to
<code>02xdb/lib</code> and <code>00xml/usr</code> being
added to <code>02xdb/usr</code>.   When they are added to the database,
files in <code>usr</code> are added as XML, with files in <code>lib</code> 
being added as BINARY.</p>

<h3>Extra TEI</h3>

<p>You can add additional TEI texts or corpora, to the project's
<code>00xml/tei</code> directory.  The entire contents of this directory
are included in the DB under the project's <code>tei</code>
subcollection.</p>

<h3>Browsing Data</h3>

<p>You can browse the raw contents of the DB using the REST interface,
which serves up the XML files as XML, meaning that it is best to do
this using Firefox or another browser that displays the XML tree in a
tractable manner.  Because the files use a lot of unicode, you may
want to set a default font from the Oracc fonts page when viewing the
DB.</p>

<p>To browse the DB go to the following URL:</p>

<pre>
<a href="http://oracc.museum.upenn.edu:8680/db">http://oracc.museum.upenn.edu:8680/db</a>
</pre>

</d:doc>
