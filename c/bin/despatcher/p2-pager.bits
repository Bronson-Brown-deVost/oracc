void
h_pqx_html_pager(const char *project, struct component *components)
{
  /* line_id/frag_id are not used yet */
  const char *line_id = NULL, *frag_id = NULL, *mode = NULL;
  if (!line_id)
    line_id = "none";
  if (!frag_id)
    frag_id = "none";
  if (have_component[C_UI])
    mode = have_component[C_UI]->text;
  else
    mode = "full";
  execl("/usr/bin/perl", "perl", "/usr/local/oracc/bin/p2-pager.plx", 
	"-p", cgi_arg("project", project),
	"-p", cgi_arg("adhoc", 
		      components[0].replace ? components[0].replace : components[0].text),
	"-p", cgi_arg("line-id", line_id),
	"-p", cgi_arg("frag-id", frag_id),
	"-p", cgi_arg("mode", mode),
	NULL);
}

static void 
lng_handler(struct component *components)
{
  if (patterns_debug)
    show_components(components);
  else if (project)
    {
      execl("/usr/bin/perl", "perl", "/usr/local/oracc/bin/p2-pager.plx", 
	    "-p", cgi_arg("project", project), 
	    "-p", cgi_arg("glossary", elements[0]),
	    NULL);
      perror("execl failed");
      exit(1);
    }
  else
    find(NULL, make_find_phrase("gls", elements[0], 1));
}

void
adhoc(const char *adhoc_texts, const char *line_id, const char *frag_id)
{
  /* print_hdr_xml(); */
  if (!line_id)
    line_id = "none";
  if (!frag_id)
    frag_id = "none";
  execl("/usr/bin/perl", "perl", "/usr/local/oracc/bin/p2-pager.plx", 
	"-p", cgi_arg("project", project),
	"-p", cgi_arg("adhoc", adhoc_texts),
	"-p", cgi_arg("line-id", line_id),
	"-p", cgi_arg("frag-id", frag_id),
	"-p", cgi_arg("mode", mode),
	NULL);
  perror("execl failed");
  exit(1);
}

void
xis(const char *xlang, const char *xid)
{
  /* print_hdr_xml(); */
  mode = "minimal";
  execl("/usr/bin/perl", "perl", "/usr/local/oracc/bin/p2-pager.plx", 
	"-p", cgi_arg("project", project), 
	"-p", cgi_arg("xis-lang", xlang),
	"-p", cgi_arg("xis-id", xid),
	"-p", cgi_arg("mode", mode),
	NULL);
  perror("execl failed");
  exit(1);
}

static void
xis(const char *xlang, const char *xid)
{
  mode = "minimal";
  execl("/usr/bin/perl", "perl", "/usr/local/oracc/bin/p2-pager.plx", 
	"-p", cgi_arg("project", project), 
	"-p", cgi_arg("xis-lang", xlang),
	"-p", cgi_arg("xis-id", xid),
	"-p", cgi_arg("mode", mode),
	NULL);
  perror("execl failed");
  exit(1);
}

void
list(const char *list)
{
  /* print_hdr_xml(); */
  execl("/usr/bin/perl", "perl", "/usr/local/oracc/bin/p2-pager.plx", 
	"-p", cgi_arg("project", project),
	"-p", cgi_arg("browse-list", list),
	"-p", cgi_arg("mode", mode),
	NULL);
  perror("execl failed");
  exit(1);
}
