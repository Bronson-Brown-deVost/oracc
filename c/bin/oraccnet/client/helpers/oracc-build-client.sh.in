#!/bin/sh
FLAGS=p:s:
PROG=oracc-build-client.sh

## Options
args=`getopt $FLAGS $*`
echo args=$args
for args; do
    case "$args" in
	-p ) project=$2
	     shift ; shift ;;
	-s ) server=$2
	     shift ; shift ;;
	-- ) shift; break ;;
    esac
done

if [ $? != 0 -o $# != 0 ] ; then
  echo ""
  echo "Usage: oracc-build-client.sh {args}"
  echo ""
  exit 0
fi

if [ "$server" != "" ]; then
    server="-s $server"
fi

## Check we are in proper project location
if [ ! -r "00lib/config.xml" ]; then
    echo oracc-build-client.sh: not in an Oracc project directory. Stop.
    exit 1
fi

## Check current project is arg project
cproject=`tr '\n' ' ' <00lib/config.xml | head -1 | sed 's/^.*n="//' | cut -d'"' -f1`
if [ "$project" = "" ]; then
    project=$cproject
fi
if [ "$cproject" != "$project" ]; then
    echo oracc-build-client.sh: current project is $cproject but build request is for $project. Stop.
    exit 1
fi

echo $PROG: working on project $project

rm -f build.log

## User/Pass
. ~/.oracc-user

## Package
echo $PROG: packaging project data to send to build server ...
. oracc-client-pack-project.sh

## Send
echo $PROG: sending $project to build.oracc.org for building ...
echo oracc-client -m build $server -u $user -P $pass -p $project -v $version -Mfile:zip=$zip
oracc-client -m build $server -u $user -P $pass -p $project -v $version -Mfile:zip=$zip

## Report
echo $PROG: `wc -l build.log | perl -p -e 's/^.*?(\d+).*$/$1/'` lines written to build.log
